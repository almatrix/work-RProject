#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000),limits=c(1,50000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Check-in Category")
#     theme(axis.text = element_text(size=7),legend.position="none",
#           axis.text.x=element_text(angle=45,vjust=1,hjust=1),
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
gg.outliers = ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=0.6,vjust=-0.2)+
scale_size_continuous(range=c(0.3,2.5))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000),limits=c(1,50000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Check-in Category")
#     theme(axis.text = element_text(size=7),legend.position="none",
#           axis.text.x=element_text(angle=45,vjust=1,hjust=1),
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
gg.outliers = ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=0.6,vjust=-0.2)+
scale_size_continuous(range=c(0.3,2.5))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000),limits=c(1,50000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Check-in Category")
#     theme(axis.text = element_text(size=7),legend.position="none",
#           axis.text.x=element_text(angle=45,vjust=1,hjust=1),
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
gg.outliers = ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=0.6,vjust=-0.2)+
scale_size_continuous(range=c(0.3,2.5))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000),limits=c(1,50000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Venue Category")
#     theme(axis.text = element_text(size=7),legend.position="none",
#           axis.text.x=element_text(angle=45,vjust=1,hjust=1),
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
gg.outliers = ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity",fill="black")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=0.6,vjust=-0.2)+
scale_size_continuous(range=c(0.3,2.5))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000),limits=c(1,50000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Venue Category")
#     theme(axis.text = element_text(size=7),legend.position="none",
#           axis.text.x=element_text(angle=45,vjust=1,hjust=1),
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity",fill="black")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=0.6,vjust=-0.2,angle=90,color="white")+
scale_size_continuous(range=c(0.3,2.5))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000),limits=c(1,50000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Venue Category")
ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity",fill="black")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=1,vjust=-0.2,angle=90,color="white")+
scale_size_continuous(range=c(0.3,3))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000),limits=c(1,50000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Venue Category")
ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity",fill="black")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=1,vjust=0.5,angle=90,color="white")+
scale_size_continuous(range=c(0.3,3))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000),limits=c(1,50000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Venue Category")
#     theme(axis.text = element_text(size=7),legend.position
ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity",fill="black")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=1.2,vjust=0.5,angle=90,color="white")+
scale_size_continuous(range=c(0.3,3))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000),limits=c(1,50000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Venue Category")
gg.outliers = ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity",fill="black")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=1.2,vjust=0.5,angle=90,color="white")+
scale_size_continuous(range=c(0.3,3))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000))+
annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,color="white",size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Venue Category")
#     theme(axis.text = element_text(size=7),legend.position="none",
#           axis.text.x=element_text(angle=45,vjust=1,hjust=1),
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
gg.outliers = ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity",fill="black")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=1.2,vjust=0.5,angle=90,color="white")+
scale_size_continuous(range=c(0.3,3))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000))+
#     annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=4,size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Venue Category")
#     theme(axis.text = element_text(size=7),legend.position="none",
#           axis.text.x=element_text(angle=45,vjust=1,hjust=1),
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
gg.outliers = ggplot(outlier.stat,aes(x=category,y=Freq))+facet_wrap(city~space)+
geom_histogram(stat="identity",fill="black")+
geom_text(aes(label=Freq,size=log(Freq)),hjust=1.2,vjust=0.5,angle=90,color="white")+
scale_size_continuous(range=c(0.3,3))+
#     coord_flip()+
#     scale_y_sqrt(breaks=c(100,2500,10000))+
#     scale_y_continuous(limit=c(0,10000))+
scale_y_log10(breaks=c(1,10,100,1000,10000))+
#     annotate("rect",xmin=5,xmax=6,ymin=3000,ymax=30000,alpha=0.3)+
geom_text(aes(label=type),x=5.5,y=3.5,size=3.5)+
#     annotate("rect",xmin=4.1,xmax=5.9,ymin=5000,ymax=10000,alpha=0.3)+
#     geom_text(aes(label=type),x=5,y=85,color="white")+
labs(y="Frequency",x="Venue Category")
#     theme(axis.text = element_text(size=7),legend.position="none",
#           axis.text.x=element_text(angle=45,vjust=1,hjust=1),
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
pdf("plots/fig9.coor.spatial.2.pdf",width=7,height=4.5,colormodel = "grey")
gg.outliers
dev.off()
gg.maps<-lapply(1:3,function(city.index){
SPDF = readOGR(dsn = "../../global/data/shapefiles", layer = city.guide$shapefile.zip[city.index])
shape.df = df.from.spdf(SPDF)
# get the center of each polygon
centroids.df=as.data.frame(coordinates(SPDF))
colnames(centroids.df)=c("lon.cent","lat.cent")
centroids.df$id=rownames(centroids.df)
outlier.stat.unique=merge(data2[[city.index]],unique(outlier.stat[,c(1,7)]),
by="space",all.x=T)
outlier.stat.unique$type=as.factor(outlier.stat.unique$type)
outlier.stat.unique$disp.name=with(outlier.stat.unique,
ifelse(is.na(type),"",
paste0(as.character(space),"(",type,")")))
shape.df = merge(x=shape.df,y=outlier.stat.unique,
#                      y=outlier.stat.unique[which(outlier.stat.unique$city==city.guide$city[city.index]),],
#                      y=data2[[city.index]],
by.x=city.guide$spatial.attr[city.index],by.y="space",all.x=T)
shape.df = merge(x=shape.df,y=centroids.df,by="id",all.x=T)
shape.df = shape.df[order(shape.df$order),]
map1<-map.plot(mapdf=shape.df,more.aes=aes(fill=type),color="grey",size=0.3)+
ggtitle(paste(city.guide$city[city.index],": Outliers"))+
#         ggtitle(bquote(atop(.(city.guide$city[city.index])~": Outliers" )))+
labs(x="Longitude",y="Latitude")+
scale_fill_manual(values=c("#666666","#999999","#dddddd"),name="Outliers")+
geom_text(data=shape.df,size=3,
aes(x=lon.cent,y=lat.cent,label=disp.name))+
theme(axis.text = element_text(size=8),legend.position="none",
#               legend.title=element_text(size=8),legend.text=element_text(size=8),
axis.title = element_text(size=10),plot.title = element_text(size=10),
plot.margin=unit(c(.05,.05,.05,.05),"npc"))
})
pdf("plots/fig10.outliers.map.pdf",width=7,height=2.5,colormodel = "grey")
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
ncol=3,nrow=1,widths=c(1,0.85,1.15))
dev.off()
gg.maps<-lapply(1:3,function(city.index){
SPDF = readOGR(dsn = "../../global/data/shapefiles", layer = city.guide$shapefile.zip[city.index])
shape.df = df.from.spdf(SPDF)
# get the center of each polygon
centroids.df=as.data.frame(coordinates(SPDF))
colnames(centroids.df)=c("lon.cent","lat.cent")
centroids.df$id=rownames(centroids.df)
outlier.stat.unique=merge(data2[[city.index]],unique(outlier.stat[,c(1,7)]),
by="space",all.x=T)
outlier.stat.unique$type=as.factor(outlier.stat.unique$type)
outlier.stat.unique$disp.name=with(outlier.stat.unique,
ifelse(is.na(type),"",
paste0(as.character(space),"(",type,")")))
shape.df = merge(x=shape.df,y=outlier.stat.unique,
#                      y=outlier.stat.unique[which(outlier.stat.unique$city==city.guide$city[city.index]),],
#                      y=data2[[city.index]],
by.x=city.guide$spatial.attr[city.index],by.y="space",all.x=T)
shape.df = merge(x=shape.df,y=centroids.df,by="id",all.x=T)
shape.df = shape.df[order(shape.df$order),]
map1<-map.plot(mapdf=shape.df,more.aes=aes(fill=type),color="grey",size=0.3)+
ggtitle(paste(city.guide$city[city.index],": Outliers"))+
#         ggtitle(bquote(atop(.(city.guide$city[city.index])~": Outliers" )))+
labs(x="Longitude",y="Latitude")+
scale_fill_manual(values=c("#666666","#999999","#dddddd"),name="Outliers")+
geom_text(data=shape.df,size=2,
aes(x=lon.cent,y=lat.cent,label=disp.name))+theme_bw(base_size = 10)
#         theme(axis.text = element_text(size=8),legend.position="none",
# #               legend.title=element_text(size=8),legend.text=element_text(size=8),
#               axis.title = element_text(size=10),plot.title = element_text(size=10),
#           plot.margin=unit(c(.05,.05,.05,.05),"npc"))
})
pdf("plots/fig10.outliers.map.pdf",width=7,height=2.5,colormodel = "grey")
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
ncol=3,nrow=1,widths=c(1,0.85,1.15))
dev.off()
gg.maps<-lapply(1:3,function(city.index){
SPDF = readOGR(dsn = "../../global/data/shapefiles", layer = city.guide$shapefile.zip[city.index])
shape.df = df.from.spdf(SPDF)
# get the center of each polygon
centroids.df=as.data.frame(coordinates(SPDF))
colnames(centroids.df)=c("lon.cent","lat.cent")
centroids.df$id=rownames(centroids.df)
outlier.stat.unique=merge(data2[[city.index]],unique(outlier.stat[,c(1,7)]),
by="space",all.x=T)
outlier.stat.unique$type=as.factor(outlier.stat.unique$type)
outlier.stat.unique$disp.name=with(outlier.stat.unique,
ifelse(is.na(type),"",
paste0(as.character(space),"(",type,")")))
shape.df = merge(x=shape.df,y=outlier.stat.unique,
#                      y=outlier.stat.unique[which(outlier.stat.unique$city==city.guide$city[city.index]),],
#                      y=data2[[city.index]],
by.x=city.guide$spatial.attr[city.index],by.y="space",all.x=T)
shape.df = merge(x=shape.df,y=centroids.df,by="id",all.x=T)
shape.df = shape.df[order(shape.df$order),]
theme_new<-theme_set(theme_bw(base_size = 10))
theme_new<-theme_update(legend.position="none")
map1<-map.plot(mapdf=shape.df,more.aes=aes(fill=type),color="grey",size=0.3)+
ggtitle(paste(city.guide$city[city.index],": Outliers"))+
#         ggtitle(bquote(atop(.(city.guide$city[city.index])~": Outliers" )))+
labs(x="Longitude",y="Latitude")+
scale_fill_manual(values=c("#666666","#999999","#dddddd"),name="Outliers")+
geom_text(data=shape.df,size=2,
aes(x=lon.cent,y=lat.cent,label=disp.name))
#         theme(axis.text = element_text(size=8),legend.position="none",
# #               legend.title=element_text(size=8),legend.text=element_text(size=8),
#               axis.title = element_text(size=10),plot.title = element_text(size=10),
#           plot.margin=unit(c(.05,.05,.05,.05),"npc"))
})
pdf("plots/fig10.outliers.map.pdf",width=7,height=2.5,colormodel = "grey")
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
ncol=3,nrow=1,widths=c(1,0.85,1.15))
dev.off()
?map.plot
map.plot = function(mapdir=NA,maplayer=NA,mapdf=NA,basemap=NA,
more.aes=NULL,...){
# get map data either from a existing dataframe or a shapefile
if(!is.na(mapdf)){
shape.df = mapdf
} else if(!is.na(mapdir) && !is.na(maplayer)){
SPDF = readOGR(dsn = mapdir, layer = maplayer)
shape.df = df.from.spdf(SPDF)
} else {
stop("map.plot() failed to find map data.")
}
# plot the geographic map
gg.map <- with.basemap(basemap)
# flexible aes
aes.list = append.aes(aes(long,lat,group=group),more.aes)
gg.map<- gg.map +
geom_polygon(data=shape.df,aes.list,...) +
#         theme_bw()  +
coord_map()
}
gg.maps<-lapply(1:3,function(city.index){
SPDF = readOGR(dsn = "../../global/data/shapefiles", layer = city.guide$shapefile.zip[city.index])
shape.df = df.from.spdf(SPDF)
# get the center of each polygon
centroids.df=as.data.frame(coordinates(SPDF))
colnames(centroids.df)=c("lon.cent","lat.cent")
centroids.df$id=rownames(centroids.df)
outlier.stat.unique=merge(data2[[city.index]],unique(outlier.stat[,c(1,7)]),
by="space",all.x=T)
outlier.stat.unique$type=as.factor(outlier.stat.unique$type)
outlier.stat.unique$disp.name=with(outlier.stat.unique,
ifelse(is.na(type),"",
paste0(as.character(space),"(",type,")")))
shape.df = merge(x=shape.df,y=outlier.stat.unique,
#                      y=outlier.stat.unique[which(outlier.stat.unique$city==city.guide$city[city.index]),],
#                      y=data2[[city.index]],
by.x=city.guide$spatial.attr[city.index],by.y="space",all.x=T)
shape.df = merge(x=shape.df,y=centroids.df,by="id",all.x=T)
shape.df = shape.df[order(shape.df$order),]
theme_new<-theme_set(theme_bw(base_size = 10))
theme_new<-theme_update(legend.position="none")
map1<-map.plot(mapdf=shape.df,more.aes=aes(fill=type),color="grey",size=0.3)+
ggtitle(paste(city.guide$city[city.index],": Outliers"))+
#         ggtitle(bquote(atop(.(city.guide$city[city.index])~": Outliers" )))+
labs(x="Longitude",y="Latitude")+
scale_fill_manual(values=c("#666666","#999999","#dddddd"),name="Outliers")+
geom_text(data=shape.df,size=2,
aes(x=lon.cent,y=lat.cent,label=disp.name))
#         theme(axis.text = element_text(size=8),legend.position="none",
# #               legend.title=element_text(size=8),legend.text=element_text(size=8),
#               axis.title = element_text(size=10),plot.title = element_text(size=10),
#           plot.margin=unit(c(.05,.05,.05,.05),"npc"))
})
pdf("plots/fig10.outliers.map.pdf",width=7,height=2.5,colormodel = "grey")
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
ncol=3,nrow=1,widths=c(1,0.85,1.15))
dev.off()
pdf("plots/fig10.outliers.map.pdf",width=8,height=3,colormodel = "grey")
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
ncol=3,nrow=1,widths=c(1,0.9,1.2))
dev.off()
pdf("plots/fig10.outliers.map.pdf",width=10,height=4,colormodel = "grey")
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
ncol=3,nrow=1,widths=c(1,0.9,1.2))
dev.off()
pdf("plots/fig10.outliers.map.pdf",width=10,height=4,colormodel = "grey")
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
ncol=3,nrow=1,widths=c(1,0.85,1.2))
dev.off()
gg.maps<-lapply(1:3,function(city.index){
SPDF = readOGR(dsn = "../../global/data/shapefiles", layer = city.guide$shapefile.zip[city.index])
shape.df = df.from.spdf(SPDF)
# get the center of each polygon
centroids.df=as.data.frame(coordinates(SPDF))
colnames(centroids.df)=c("lon.cent","lat.cent")
centroids.df$id=rownames(centroids.df)
outlier.stat.unique=merge(data2[[city.index]],unique(outlier.stat[,c(1,7)]),
by="space",all.x=T)
outlier.stat.unique$type=as.factor(outlier.stat.unique$type)
outlier.stat.unique$disp.name=with(outlier.stat.unique,
ifelse(is.na(type),"",
paste0(as.character(space),"(",type,")")))
shape.df = merge(x=shape.df,y=outlier.stat.unique,
#                      y=outlier.stat.unique[which(outlier.stat.unique$city==city.guide$city[city.index]),],
#                      y=data2[[city.index]],
by.x=city.guide$spatial.attr[city.index],by.y="space",all.x=T)
shape.df = merge(x=shape.df,y=centroids.df,by="id",all.x=T)
shape.df = shape.df[order(shape.df$order),]
theme_new<-theme_set(theme_bw(base_size = 9))
theme_new<-theme_update(legend.position="none")
map1<-map.plot(mapdf=shape.df,more.aes=aes(fill=type),color="grey",size=0.3)+
ggtitle(paste(city.guide$city[city.index],": Outliers"))+
#         ggtitle(bquote(atop(.(city.guide$city[city.index])~": Outliers" )))+
labs(x="Longitude",y="Latitude")+
scale_fill_manual(values=c("#666666","#999999","#dddddd"),name="Outliers")+
geom_text(data=shape.df,size=3,
aes(x=lon.cent,y=lat.cent,label=disp.name))
#         theme(axis.text = element_text(size=8),legend.position="none",
# #               legend.title=element_text(size=8),legend.text=element_text(size=8),
#               axis.title = element_text(size=10),plot.title = element_text(size=10),
#           plot.margin=unit(c(.05,.05,.05,.05),"npc"))
})
pdf("plots/fig10.outliers.map.pdf",width=10,height=4,colormodel = "grey")
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
ncol=3,nrow=1,widths=c(1,0.85,1.15))
dev.off()
?theme_bw
gg.maps<-lapply(1:3,function(city.index){
SPDF = readOGR(dsn = "../../global/data/shapefiles", layer = city.guide$shapefile.zip[city.index])
shape.df = df.from.spdf(SPDF)
# get the center of each polygon
centroids.df=as.data.frame(coordinates(SPDF))
colnames(centroids.df)=c("lon.cent","lat.cent")
centroids.df$id=rownames(centroids.df)
outlier.stat.unique=merge(data2[[city.index]],unique(outlier.stat[,c(1,7)]),
by="space",all.x=T)
outlier.stat.unique$type=as.factor(outlier.stat.unique$type)
outlier.stat.unique$disp.name=with(outlier.stat.unique,
ifelse(is.na(type),"",
paste0(as.character(space),"(",type,")")))
shape.df = merge(x=shape.df,y=outlier.stat.unique,
#                      y=outlier.stat.unique[which(outlier.stat.unique$city==city.guide$city[city.index]),],
#                      y=data2[[city.index]],
by.x=city.guide$spatial.attr[city.index],by.y="space",all.x=T)
shape.df = merge(x=shape.df,y=centroids.df,by="id",all.x=T)
shape.df = shape.df[order(shape.df$order),]
theme_new<-theme_set(theme_bw(base_size = 10))
theme_new<-theme_update(legend.position="none")
map1<-map.plot(mapdf=shape.df,more.aes=aes(fill=type),color="grey",size=0.3)+
ggtitle(paste(city.guide$city[city.index],": Outliers"))+
#         ggtitle(bquote(atop(.(city.guide$city[city.index])~": Outliers" )))+
labs(x="Longitude",y="Latitude")+
scale_fill_manual(values=c("#666666","#999999","#dddddd"),name="Outliers")+
geom_text(data=shape.df,size=3,
aes(x=lon.cent,y=lat.cent,label=disp.name))
#         theme(axis.text = element_text(size=8),legend.position="none",
# #               legend.title=element_text(size=8),legend.text=element_text(size=8),
#               axis.title = element_text(size=10),plot.title = element_text(size=10),
#           plot.margin=unit(c(.05,.05,.05,.05),"npc"))
})
pdf("plots/fig10.outliers.map.pdf",width=10,height=4,colormodel = "grey")
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
ncol=3,nrow=1,widths=c(1,0.85,1.15))
dev.off()
checkin.poly.list = lapply(1:3, function(city.index){
checkin = prepare.checkin(paste0("../../global/data/csv-raw/",
city.guide$csvfile[city.index],".csv"),
is.raw=TRUE, weather.data=NA,
convert.time=TRUE, add.history=FALSE)
SPDF = readOGR(dsn = "../../global/data/shapefiles",
layer = city.guide$shapefile.zip[city.index])
na.omit(point.in.poly(checkin, SPDF, copy.attr=city.guide$spatial.attr[city.index]))
})
city.guide=data.frame("city"=c("Chicago","Los Angeles","New York"),
"coord.x"=c(-87.92,-118.64,-74.23),
"coord.y"=c(41.7,33.82,40.85),
"spatial.attr" = c("ZIP","Zip_Num","POSTAL"),
"shapefile.boundary" = c("bounds_ChicagoCity_WGS84",
"bounds_LA_City_WGS84","NYC_borough_boundaries_WGS84"),
"shapefile.zip" = c("Chicago-ZipCodes","LA_Zipcodes","NYC_zipcode"),
"csvfile"=c("ChicagoCity","LosAngelesCity","NewYorkCity"),
"label"=c("Area:234.0 sq mi\nPopulation:2,695,598(2010)\nCheck-ins:183,837",
"Area:503 sq mi\nPopulation:3,884,307(2013)\nCheck-ins:138,211",
"Area:468.9 sq mi\nPopulation:8,405,837(2013)\nCheck-ins:579,786"),
stringsAsFactors=FALSE)
tiff("plots/fig1.data.review.tiff", width=8*ppi,height=3*ppi,res=ppi)
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
nrow=1, ncol=3, widths=c(1,0.9,1.2))
dev.off()
gg.maps = lapply(1:3, function(city.index){
point.data = checkin.poly.list[[city.index]]
#     sample.index = sample(1:nrow(point.data),floor(nrow(point.data)*0.05))
point.plot(point.data,
alpha=0.3,size=1,fill=NA,color="#333333",
basemap = map.plot(mapdir="../../global/data/shapefiles",
maplayer=city.guide$shapefile.boundary[city.index],
size=0.2,color="grey",fill=NA))+
ggtitle(city.guide$city[city.index])+
xlab("Longitude")+ylab("Latitude")+theme_bw(base_size = 10)+
annotate("text",x=city.guide$coord.x[city.index],y=city.guide$coord.y[city.index],
size=2.5,hjust=0,label=city.guide$label[city.index])
})
tiff("plots/fig1.data.review.tiff", width=8*ppi,height=3*ppi,res=ppi)
grid.arrange(gg.maps[[1]],gg.maps[[2]],gg.maps[[3]],
nrow=1, ncol=3, widths=c(1,0.9,1.2))
dev.off()
pdf("plots/fig2.truncated.plfit.pdf",width=7,height=4,colormodel="grey")
grid.arrange(gg.fx,gg.Fx,nrow=2)
dev.off()
dev.off()
grid.arrange(gg.fx,gg.Fx,nrow=2)
dev.off()
pdf("plots/fig2.truncated.plfit2.pdf",width=7,height=4,colormodel="grey")
grid.arrange(gg.fx,gg.Fx,nrow=2)
dev.off()
pdf("plots/fig2.truncated.plfit2.pdf",width=7,height=4,colormodel="grey")
dev.off()
gg.Fx
