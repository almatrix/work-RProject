})
grid.arrange(arrangeGrob(gg.usercls[[1]][[8]],
gg.usercls[[1]][[3]],gg.usercls[[1]][[1]],
ncol=3,nrow=1,main="Example for Chicago (a)"),
arrangeGrob(gg.stat,main="Overall trend for three cities (b)"),ncol=1,nrow=2)
load("data/clusters.list.Rda")
gg.usercls = list(); stats=data.frame()
theme_new<-theme_set(theme_bw(base_size = 10))
label.posx=c(10,10,10,300,300,300,500,500,500)
label.posy=c(12,30,65,100,165,200,300,400)
lapply(1:3,function(city.index){
counter <<- 0
gg.usercls[[city.index]] <<- lapply(clusters.list[[city.index]],function(i){
#     idx<<-idx+1
counter <<- counter + 1
gg<-ggplot(i[[3]])+
geom_histogram(aes(x=Freq),binwidth=0.05,fill=NA,color="#333333")+
#             geom_density(aes(x=Freq),adjust=2)+
#         scale_x_log10(breaks=c(1,10,30,xintercepts[idx],100,1000),limits=c(2,3000))+
scale_x_log10(breaks=c(10,30,100,1000),limits=c(2,3000))+
#             scale_y_continuous(limits=c(0,1.8))+
xlab("Number of records per cluster")+
ylab("Histogram")+
annotate("text",x=label.posx[counter],y=label.posy[counter],size=2.7,
label=paste("Number of clusters [k]:",nrow(i[[3]]),
"\nBetween SS / Total SS:",format.percent(i[[2]]),
"\nClusters (> 30 records):",
format.percent(length(which(i[[3]]$Freq>=30))/nrow(i[[3]]))))
stats <<- rbind(stats,data.frame("city"=city.guide$city[city.index],
"Clusters"=nrow(i[[3]]),
"heteg.preserv."=i[[2]],
"over.30"=length(which(i[[3]]$Freq>=30))/nrow(i[[3]])))
gg
})
NA
})
grid.arrange(arrangeGrob(gg.usercls[[1]][[8]],
gg.usercls[[1]][[3]],gg.usercls[[1]][[1]],
ncol=3,nrow=1,main="Example for Chicago (a)"),
arrangeGrob(gg.stat,main="Overall trend for three cities (b)"),ncol=1,nrow=2)
load("data/clusters.list.Rda")
gg.usercls = list(); stats=data.frame()
theme_new<-theme_set(theme_bw(base_size = 10))
label.posx=c(10,10,10,300,300,300,500,500,500)
label.posy=c(11,30,65,100,165,200,300,400)
lapply(1:3,function(city.index){
counter <<- 0
gg.usercls[[city.index]] <<- lapply(clusters.list[[city.index]],function(i){
#     idx<<-idx+1
counter <<- counter + 1
gg<-ggplot(i[[3]])+
geom_histogram(aes(x=Freq),binwidth=0.05,fill=NA,color="#333333")+
#             geom_density(aes(x=Freq),adjust=2)+
#         scale_x_log10(breaks=c(1,10,30,xintercepts[idx],100,1000),limits=c(2,3000))+
scale_x_log10(breaks=c(10,30,100,1000),limits=c(2,3000))+
#             scale_y_continuous(limits=c(0,1.8))+
xlab("Number of records per cluster")+
ylab("Histogram")+
annotate("text",x=label.posx[counter],y=label.posy[counter],size=2.7,
label=paste("Number of clusters [k]:",nrow(i[[3]]),
"\nBetween SS / Total SS:",format.percent(i[[2]]),
"\nClusters (> 30 records):",
format.percent(length(which(i[[3]]$Freq>=30))/nrow(i[[3]]))))
stats <<- rbind(stats,data.frame("city"=city.guide$city[city.index],
"Clusters"=nrow(i[[3]]),
"heteg.preserv."=i[[2]],
"over.30"=length(which(i[[3]]$Freq>=30))/nrow(i[[3]])))
gg
})
NA
})
grid.arrange(arrangeGrob(gg.usercls[[1]][[8]],
gg.usercls[[1]][[3]],gg.usercls[[1]][[1]],
ncol=3,nrow=1,main="Example for Chicago (a)"),
arrangeGrob(gg.stat,main="Overall trend for three cities (b)"),ncol=1,nrow=2)
grid.arrange(arrangeGrob(gg.usercls[[1]][[8]],
gg.usercls[[1]][[5]],gg.usercls[[1]][[3]],
ncol=3,nrow=1,main="Example for Chicago (a)"),
arrangeGrob(gg.stat,main="Overall trend for three cities (b)"),ncol=1,nrow=2)
png("plots/new-new-fig2.png",width=2400,height=1500,res=300)
grid.arrange(arrangeGrob(gg.usercls[[1]][[6]],
gg.usercls[[1]][[3]],gg.usercls[[1]][[1]],
ncol=3,nrow=1,main="Example for Chicago (a)"),
arrangeGrob(gg.stat,main="Overall trend for three cities (b)"),ncol=1,nrow=2)
dev.off()
png("plots/new-new-fig2.png",width=2400,height=1500,res=300)
grid.arrange(arrangeGrob(gg.usercls[[1]][[6]],
gg.usercls[[1]][[3]],
ncol=2,nrow=1,main="Example for Chicago (a)"),
arrangeGrob(gg.stat,main="Overall trend for three cities (b)"),ncol=1,nrow=2)
dev.off()
png("plots/new-new-fig2.png",width=2400,height=1500,res=300)
grid.arrange(arrangeGrob(gg.usercls[[1]][[8]],
gg.usercls[[1]][[3]],
ncol=2,nrow=1,main="Example for Chicago (a)"),
arrangeGrob(gg.stat,main="Overall trend for three cities (b)"),ncol=1,nrow=2)
dev.off()
outlier.list = data.frame(
"name" = c("60609","60612","60629","60666",
"90045",
"10452","11368","11371","11430",""),
"type" =  c("A","A","A","A",
"A",
"A","A","A","A","A"),
#     "type" =  c("B","B","A","A",
#                  "A",
#                  "B","B","A","A","C"),
"desc" = c(
"Baseball park",
"Sports arena",
"Airport",
"Airport",
"Airport",
"Baseball park",
"Baseball park",
"Airport",
"Airport",
""),
"desc.2" = c("US Celluar Field",
"United Center",
"Chicago Midway International Airport",
"Oâ€™Hare International Airport",
"Los Angeles International Airport",
"Yanke Stadium",
"Citi Field",
"LaGuardia Airport",
"John F. Kennedy International Airport",
"")
)
outlier.list$name=as.character(outlier.list$name)
outlier.list$desc = as.character(outlier.list$desc)
outlier.list$desc.2 = as.character(outlier.list$desc.2)
data.space.coor = ddply(entropies.etc.st.df,.(city),function(city){
stat = ddply(city,.(space),function(space){
data.frame("pi.max"=with(space,mean(pi.max)),
"pi.min"=with(space,mean(pi.min)),
"record"=with(space,sum(record)))
})
stat
})
load("data/entropies.etc.list.Rda")
entropies.etc.df=do.call(rbind,lapply(1:3,function(city.index){
entropies.etc.city = entropies.etc.list[[city.index]]
df = do.call(rbind,lapply(1:length(entropies.etc.city),function(i){
entropies.etc.city[[i]][[1]]
}))
df$City = city.guide$city[city.index]
df
}))
entropies.etc.df$delta = with(entropies.etc.df,(Pi.max-Pi.min)/Pi.min)
entropies.etc.st.df=do.call(rbind,lapply(1:3,function(city.index){
entropies.etc.city = entropies.etc.list[[city.index]]
df = do.call(rbind,lapply(1:length(entropies.etc.city),function(i){
entropies.etc.city[[i]][[2]]
}))
df$city = city.guide$city[city.index]
df
}))
data.space.coor = ddply(entropies.etc.st.df,.(city),function(city){
stat = ddply(city,.(space),function(space){
data.frame("pi.max"=with(space,mean(pi.max)),
"pi.min"=with(space,mean(pi.min)),
"record"=with(space,sum(record)))
})
stat
})
load("data/entropies.etc.list.Rda")
entropies.etc.df=do.call(rbind,lapply(1:3,function(city.index){
entropies.etc.city = entropies.etc.list[[city.index]]
df = do.call(rbind,lapply(1:length(entropies.etc.city),function(i){
entropies.etc.city[[i]][[1]]
}))
df$City = city.guide$city[city.index]
df
}))
entropies.etc.df$delta = with(entropies.etc.df,(Pi.max-Pi.min)/Pi.min)
entropies.etc.st.df=do.call(rbind,lapply(1:3,function(city.index){
entropies.etc.city = entropies.etc.list[[city.index]]
df = do.call(rbind,lapply(1:length(entropies.etc.city),function(i){
entropies.etc.city[[i]][[2]]
}))
df$city = city.guide$city[city.index]
df
}))
time.space = data.frame(do.call(rbind,strsplit(as.character(entropies.etc.st.df$condition),
" ",fixed=TRUE)))
colnames(time.space)=c("hour","space")
entropies.etc.st.df = cbind(entropies.etc.st.df,time.space)
data.space.coor = ddply(entropies.etc.st.df,.(city),function(city){
stat = ddply(city,.(space),function(space){
data.frame("pi.max"=with(space,mean(pi.max)),
"pi.min"=with(space,mean(pi.min)),
"record"=with(space,sum(record)))
})
stat
})
data.space.coor$delta = with(data.space.coor,(pi.max-pi.min)/pi.min)
data.space.coor=melt(data.space.coor,id.vars=c(1,2,5))
data.space.coor$variable<-factor(data.space.coor$variable,
labels=c("max","min",expression(delta)))
data.space.coor$outlier<-with(data.space.coor,
ifelse(space %in% outlier.list$name,T,F))
data.space.coor$label<-with(data.space.coor,
ifelse(outlier,as.character(space),""))
data.space.coor=merge(x=data.space.coor,y=outlier.list,
by.x="label",by.y="name",all.x=T)
smooth.space<-data.frame()
eqs.space <- ddply(data.space.coor,.(city,variable),function(i){
if(i[1,"variable"]=="max"){
model = lm(i,formula=value~atan(log(record/max(record))))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else if(i[1,"variable"]=="delta"){
model = lm(i,formula=value~atan(log(record/100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else{
model = lm(i,formula=value~atan(log(record*100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
#     model =lm(i,formula=value~log(record))
# regression model statistics
eq <- substitute(atop(italic(r)^2~"="~r2*","~~italic(p)~"="~pvalue),
list(r2 = format(summary(model)$r.squared, digits = 3),
pvalue = formatC(summary(model)[[4]][[8]],format="f")))
eq <- as.character(as.expression(eq));
# regression line
eqs.pred$y = predict(model, newdata = eqs.pred);
eqs.pred$variable=i[1,"variable"]
eqs.pred$city=i[1,"city"]
smooth.space <<- rbind(smooth.space,eqs.pred)
eq
})
eqs.space$pos.x=rep(c(10,3,10),each=3)
eqs.space$pos.y=rep(c(0.7,1.2,2.7),3)
theme_new<-theme_set(theme_bw(base_size = 10))
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
geom_point(aes(shape=type,size=type),fill="black",color="white")+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, bgfill="white", vjust=1.5, expand_h=1,expand_w=1)+
#     geom_text(aes(label=label),size=2.5,vjust=1.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
values=c(24,22,21))+
scale_size_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
values=c(2.5,2.5,1.5))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
outlier.list = data.frame(
"name" = c("60609","60612","60629","60666",
"90045",
"10452","11368","11371","11430",""),
"type" =  c("A","A","A","A",
"A",
"A","A","A","A","C"),
#     "type" =  c("B","B","A","A",
#                  "A",
#                  "B","B","A","A","C"),
"desc" = c(
"Baseball park",
"Sports arena",
"Airport",
"Airport",
"Airport",
"Baseball park",
"Baseball park",
"Airport",
"Airport",
""),
"desc.2" = c("US Celluar Field",
"United Center",
"Chicago Midway International Airport",
"Oâ€™Hare International Airport",
"Los Angeles International Airport",
"Yanke Stadium",
"Citi Field",
"LaGuardia Airport",
"John F. Kennedy International Airport",
"")
)
outlier.list$name=as.character(outlier.list$name)
outlier.list$desc = as.character(outlier.list$desc)
outlier.list$desc.2 = as.character(outlier.list$desc.2)
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
geom_point(aes(shape=type,size=type),fill="black",color="white")+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, bgfill="white", vjust=1.5, expand_h=1,expand_w=1)+
#     geom_text(aes(label=label),size=2.5,vjust=1.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
values=c(24,22,21))+
scale_size_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
values=c(2.5,2.5,1.5))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
outlier.list = data.frame(
"name" = c("60609","60612","60629","60666",
"90045",
"10452","11368","11371","11430",""),
"type" =  c("A","A","A","A",
"A",
"A","A","A","A","B"),
#     "type" =  c("B","B","A","A",
#                  "A",
#                  "B","B","A","A","C"),
"desc" = c(
"Baseball park",
"Sports arena",
"Airport",
"Airport",
"Airport",
"Baseball park",
"Baseball park",
"Airport",
"Airport",
""),
"desc.2" = c("US Celluar Field",
"United Center",
"Chicago Midway International Airport",
"Oâ€™Hare International Airport",
"Los Angeles International Airport",
"Yanke Stadium",
"Citi Field",
"LaGuardia Airport",
"John F. Kennedy International Airport",
"")
)
outlier.list$name=as.character(outlier.list$name)
outlier.list$desc = as.character(outlier.list$desc)
outlier.list$desc.2 = as.character(outlier.list$desc.2)
data.space.coor = ddply(entropies.etc.st.df,.(city),function(city){
stat = ddply(city,.(space),function(space){
data.frame("pi.max"=with(space,mean(pi.max)),
"pi.min"=with(space,mean(pi.min)),
"record"=with(space,sum(record)))
})
stat
})
data.space.coor$delta = with(data.space.coor,(pi.max-pi.min)/pi.min)
data.space.coor=melt(data.space.coor,id.vars=c(1,2,5))
data.space.coor$variable<-factor(data.space.coor$variable,
labels=c("max","min",expression(delta)))
data.space.coor$outlier<-with(data.space.coor,
ifelse(space %in% outlier.list$name,T,F))
data.space.coor$label<-with(data.space.coor,
ifelse(outlier,as.character(space),""))
data.space.coor=merge(x=data.space.coor,y=outlier.list,
by.x="label",by.y="name",all.x=T)
smooth.space<-data.frame()
eqs.space <- ddply(data.space.coor,.(city,variable),function(i){
if(i[1,"variable"]=="max"){
model = lm(i,formula=value~atan(log(record/max(record))))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else if(i[1,"variable"]=="delta"){
model = lm(i,formula=value~atan(log(record/100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else{
model = lm(i,formula=value~atan(log(record*100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
#     model =lm(i,formula=value~log(record))
# regression model statistics
eq <- substitute(atop(italic(r)^2~"="~r2*","~~italic(p)~"="~pvalue),
list(r2 = format(summary(model)$r.squared, digits = 3),
pvalue = formatC(summary(model)[[4]][[8]],format="f")))
eq <- as.character(as.expression(eq));
# regression line
eqs.pred$y = predict(model, newdata = eqs.pred);
eqs.pred$variable=i[1,"variable"]
eqs.pred$city=i[1,"city"]
smooth.space <<- rbind(smooth.space,eqs.pred)
eq
})
eqs.space$pos.x=rep(c(10,3,10),each=3)
eqs.space$pos.y=rep(c(0.7,1.2,2.7),3)
theme_new<-theme_set(theme_bw(base_size = 10))
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
geom_point(aes(shape=type,size=type),fill="black",color="white")+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, bgfill="white", vjust=1.5, expand_h=1,expand_w=1)+
#     geom_text(aes(label=label),size=2.5,vjust=1.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
values=c(24,22,21))+
scale_size_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
values=c(2.5,2.5,1.5))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
geom_point(aes(shape=type,size=type),fill="black",color="white")+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, bgfill="white", vjust=1.5, expand_h=1,expand_w=1)+
#     geom_text(aes(label=label),size=2.5,vjust=1.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier","Normal region"),values=c(24,21))+
scale_size_manual(name="",labels=c("Outlier","Normal region"),values=c(2.5,1))+
#     scale_shape_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
#                        values=c(24,22,21))+
#     scale_size_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
#                       values=c(2.5,2.5,1.5))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
gg.coor.space<-ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
geom_point(aes(shape=type,size=type),fill="black",color="white")+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, bgfill="white", vjust=1.5, expand_h=1,expand_w=1)+
#     geom_text(aes(label=label),size=2.5,vjust=1.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier","Normal region"),values=c(24,21))+
scale_size_manual(name="",labels=c("Outlier","Normal region"),values=c(2.5,1.5))+
#     scale_shape_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
#                        values=c(24,22,21))+
#     scale_size_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
#                       values=c(2.5,2.5,1.5))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
gg.coor.space
png("plots/new-new-fig7.png",width=2400,height=1350,res=300)
gg.coor.space
dev.off()
gg.coor.space<-ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
geom_point(aes(shape=type,size=type),fill="black",color="white")+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, bgfill="white", vjust=1.5, expand_h=1,expand_w=1)+
#     geom_text(aes(label=label),size=2.5,vjust=1.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier","Normal region"),values=c(24,21))+
scale_size_manual(name="",labels=c("Outlier","Normal region"),values=c(2.5,1))+
#     scale_shape_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
#                        values=c(24,22,21))+
#     scale_size_manual(name="",labels=c("Outlier type A","Outlier type B","Normal region"),
#                       values=c(2.5,2.5,1.5))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
png("plots/new-new-fig7.png",width=2400,height=1350,res=300)
gg.coor.space
dev.off()
space.stat = do.call(rbind,lapply(1:3,function(city.index){
data.total = checkin.poly.list[[city.index]][,c(city.guide$spatial.attr[city.index],"cate_l1")]
colnames(data.total)[1]="space"
stat.byspace=ddply(data.total,.(space),function(i){
df = as.data.frame(xtabs(~cate_l1,data=i))
df$prob = with(df,Freq/sum(Freq))
df
})
stat.byspace$city = city.guide$city[city.index]
stat.byspace$space = as.character(stat.byspace$space)
stat.byspace
}))
space.stat=merge(space.stat,outlier.list,by.x="space",by.y="name")
space.stat$log.freq=with(space.stat,ifelse(Freq==0,0,log(Freq)))
theme_new<-theme_set(theme_bw(base_size = 10))
theme_new<-theme_update(legend.position="none",
axis.text.x=element_text(angle=50,vjust=1,hjust=1))
ggplot(space.stat)+
facet_wrap(~city+space,nrow=3)+
geom_histogram(aes(x=cate_l1,y=prob),stat="identity")+
#     geom_text(aes(x=cate_l1,y=prob,label=Freq,size=log.freq),hjust=1.2,vjust=0.5,angle=90,color="white")+
geom_text(aes(x=5,y=0.75,label=type),size=3)+
scale_size_continuous(range=c(0.3,3))+
labs(y="PMF [Pr(X=x)]",x="Venue Category")
ggplot(space.stat)+
facet_wrap(~city+space,nrow=3)+
geom_histogram(aes(x=cate_l1,y=prob),stat="identity")+
#     geom_text(aes(x=cate_l1,y=prob,label=Freq,size=log.freq),hjust=1.2,vjust=0.5,angle=90,color="white")+
#     geom_text(aes(x=5,y=0.75,label=type),size=3)+
scale_size_continuous(range=c(0.3,3))+
labs(y="PMF [Pr(X=x)]",x="Venue Category")
gg.hist.space<-ggplot(space.stat)+
facet_wrap(~city+space,nrow=3)+
geom_histogram(aes(x=cate_l1,y=prob),stat="identity")+
#     geom_text(aes(x=cate_l1,y=prob,label=Freq,size=log.freq),hjust=1.2,vjust=0.5,angle=90,color="white")+
#     geom_text(aes(x=5,y=0.75,label=type),size=3)+
scale_size_continuous(range=c(0.3,3))+
labs(y="PMF [Pr(X=x)]",x="Venue Category")
png("plots/new-new-fig8.png",width=2100,height=1200,res=300)
gg.hist.space
dev.off()
