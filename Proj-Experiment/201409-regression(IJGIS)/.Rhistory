load("data/checkin.poly.list.Rda")
load("data/truncated.para.Rda")
personal.stat.frequency<-lapply(1:3,function(city.index){
checkin = checkin.poly.list[[city.index]]
# the observation of personal checkin frequency
user.freq = as.data.frame(table(checkin$user_id))
user.freq$city = city.guide$city[city.index]
user.freq
})
personal.stat.density<-lapply(1:3,function(city.index){
user.freq = personal.stat.frequency[[city.index]] # personal checkin frequency
count.freq = as.data.frame(table(user.freq$Freq)) # stats on the observed frequncy
colnames(count.freq)=c("Freq","Freq.Freq")
count.freq$Freq=as.integer(as.character(count.freq$Freq)) # back to numbers
count.freq$prob=count.freq$Freq.Freq/sum(count.freq$Freq.Freq) # probability of observing this frequency
count.freq$city = city.guide$city[city.index]
count.freq
})
# cdf
personal.stat.cdf <- lapply(1:3,function(city.index){
user.freq = personal.stat.frequency[[city.index]]
cdf = summarize(user.freq,Frequency = unique(Freq), ecdf = ecdf(Freq)(unique(Freq)))
cdf$city = city.guide$city[city.index]
cdf
})
truncated.para$city=city.guide$city
truncated.simu = ddply(truncated.para,.(city),summarize,
x = c(1:1000,2000,4000),
fx = truncated.plfit.df(c(1:1000,2000,4000),x0,beta,ka),
Fx = truncated.plfit.cdf(c(1:1000,2000,4000),x0,beta,ka))
truncated.eqs = ddply(truncated.para,.(city),function(i){
truncated.plfit.print(i$x0,i$beta,i$ka)
})
gg.fx = ggplot(do.call(rbind,personal.stat.density))+
geom_line(data=truncated.simu,aes(x=x,y=fx),size=0.8,color="#999999")+
geom_point(aes(x=Freq,y=prob),size=1.2)+
#     geom_smooth(aes(x=Freq,y=prob,linetype="Power Law"),se=F,color="blue",alpha=0.8,
#                 formula=y~x,method=lm)+
scale_x_log10(breaks=c(10,30,100,1000))+scale_y_log10(limits=c(0.00001,0.4),label=percent)+
xlab("Personal check-in frequency [x]")+ylab("PMF [Pr(X=x)]")+
geom_text(data=truncated.eqs,x=1,y=-1,aes(label=V1),
inherit.aes=FALSE,parse = TRUE,hjust=0,size=2.2)+
facet_wrap(~city)+theme_bw(base_size = 10)
#     theme(strip.text=element_text(size=8),axis.text = element_text(size=8),
#               axis.title = element_text(size=8),plot.title = element_text(size=10),
#           plot.margin=unit(c(.05,.05,.05,.05),"npc"))
gg.Fx=ggplot(do.call(rbind,personal.stat.cdf))+
geom_line(data=truncated.simu,aes(x=x,y=Fx),size=0.8,color="#999999")+
geom_point(aes(x=Frequency,y=ecdf),size=1.2)+
#     geom_smooth(aes(x=Frequency,y=ecdf,linetype="Power Law"),se=F,color="black",alpha=0.8,
#                 formula=y~x,method=glm,family=gaussian(link='log'))+
scale_x_log10(breaks=c(10,30,100,1000))+scale_y_continuous(label=percent)+
labs(x="Personal check-in frequency [x]",y="CDF [Pr(X<=x)]")+
facet_wrap(~city)+theme_bw(base_size = 10)
grid.arrange(gg.fx,gg.Fx,nrow=2)
pdf("plots/fig2.truncated.plfit.pdf",width=7,height=4,colormodel="grey")
grid.arrange(gg.fx,gg.Fx,nrow=2)
dev.off()
load("data/entropies.etc.list.Rda")
entropies.etc.df=do.call(rbind,lapply(1:3,function(city.index){
entropies.etc.city = entropies.etc.list[[city.index]]
df = do.call(rbind,lapply(1:length(entropies.etc.city),function(i){
entropies.etc.city[[i]][[1]]
}))
df$City = city.guide$city[city.index]
df
}))
entropies.etc.df$delta = with(entropies.etc.df,(Pi.max-Pi.min)/Pi.min)
entropies.etc.st.df=do.call(rbind,lapply(1:3,function(city.index){
entropies.etc.city = entropies.etc.list[[city.index]]
df = do.call(rbind,lapply(1:length(entropies.etc.city),function(i){
entropies.etc.city[[i]][[2]]
}))
df$city = city.guide$city[city.index]
df
}))
time.space = data.frame(do.call(rbind,strsplit(as.character(entropies.etc.st.df$condition),
" ",fixed=TRUE)))
colnames(time.space)=c("hour","space")
entropies.etc.st.df = cbind(entropies.etc.st.df,time.space)
data.individual.coor = melt(entropies.etc.df[which(entropies.etc.df$Condition=="ST"),c(3,4,6,9,10)],
id.vars=c(3,4))
data.individual.coor$variable<-factor(data.individual.coor$variable,
labels=c("max","min",expression(delta)))
pdf("plots/fig5.coor.indiv.pdf",width=7,height=3.5,colormodel="grey")
ggplot(data.individual.coor,
aes(x=Records,y=value))+
facet_grid(variable~City,scale="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_point(size=1)+scale_x_log10()+scale_y_continuous(labels=percent)+
labs(x="Individual check-in frequency",y=expression(Pi["ST"]))+theme_bw(base_size = 10)
#     theme(axis.text = element_text(size=8),legend.position="none",
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
dev.off()
data.hour.coor = ddply(entropies.etc.st.df,.(city),function(city){
stat = ddply(city,.(hour),function(hour){
data.frame("pi.max"=with(hour,mean(pi.max)),
"pi.min"=with(hour,mean(pi.min)),
"record"=with(hour,sum(record)))
#         data.frame("record"=with(hour,sum(record)),
#                    "pi"=with(hour,c(mean(pi.min),mean(pi.max))),
#                    "type"=c("min","max"))
})
#     stat$record = stat$record / sum(stat$record)
stat
})
data.hour.coor$delta = with(data.hour.coor,(pi.max-pi.min)/pi.min)
data.hour.coor=melt(data.hour.coor,id.vars=c(1,2,5))
data.hour.coor$variable<-factor(data.hour.coor$variable,
labels=c("max","min",expression(delta)))
eqs <- ddply(data.hour.coor,.(city,variable),function(i){
model = lm(i,formula=value~log(record))
eq <- substitute(atop(italic(r)^2~"="~r2*","~~italic(p)~"="~pvalue),
list(r2 = format(summary(model)$r.squared, digits = 3),
pvalue = formatC(summary(model)[[4]][[8]],format="f")))
as.character(as.expression(eq));
})
eqs$pos.x=rep(c(5000,3500,20000),each=3)
eqs$pos.y=rep(c(0.88,0.5,0.75),3)
# eqs2 <- ddply(data.hour.coor,.(city,variable),function(i){
#     model = lm(i,formula=value~record)
#     eq <- substitute(atop(italic(r)^2~"="~r2*","~~italic(p)~"="~pvalue),
#                      list(r2 = format(summary(model)$r.squared, digits = 3),
#                           pvalue = format(summary(model)[[4]][[8]],scientific=TRUE, digits = 3)))
#     as.character(as.expression(eq));
# })
#
ggplot(data.hour.coor,aes(x=record,y=value))+#geom_point(size=3,shape=21,fill=NA)+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
#     geom_smooth(method=loess,formula=y~x)+
geom_smooth(method=lm,formula=y~log(x),se=F,color="grey")+
geom_text(aes(label=hour),size=2.5)+
geom_point(data=data.hour.coor[which(data.hour.coor$hour %in% c("01","05","19")),])+
xlab("Hourly check-in frequency") +
ylab(expression(Pi["ST"])) +
#     ggtitle(expression(paste("Temporal Correlation (",Pi["ST"]," and Activeness)")))+
#     scale_x_log10()+
scale_y_continuous(labels=percent)+
geom_text(data=eqs,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)+theme_bw(base_size = 10)
#     theme(axis.text = element_text(size=8),legend.
ggplot(data.hour.coor,aes(x=record,y=value))+#geom_point(size=3,shape=21,fill=NA)+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
#     geom_smooth(method=loess,formula=y~x)+
geom_smooth(method=lm,formula=y~log(x),se=F,color="grey")+
geom_text(data=data.hour.coor[!which(data.hour.coor$hour %in% c("01","05","19")),],aes(label=hour),size=2)+
geom_text(data=data.hour.coor[which(data.hour.coor$hour %in% c("01","05","19")),],aes(label=hour),size=3)+
xlab("Hourly check-in frequency") +
ylab(expression(Pi["ST"])) +
#     ggtitle(expression(paste("Temporal Correlation (",Pi["ST"]," and Activeness)")))+
#     scale_x_log10()+
scale_y_continuous(labels=percent)+
geom_text(data=eqs,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)+theme_bw(base_size = 10)
#     theme(axis.text = element_text(size=8),legend.position="none"
?%in%
?in
ggplot(data.hour.coor,aes(x=record,y=value))+#geom_point(size=3,shape=21,fill=NA)+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
#     geom_smooth(method=loess,formula=y~x)+
geom_smooth(method=lm,formula=y~log(x),se=F,color="grey")+
geom_text(data=data.hour.coor[!(which(data.hour.coor$hour %in% c("01","05","19"))),],aes(label=hour),size=2)+
geom_text(data=data.hour.coor[which(data.hour.coor$hour %in% c("01","05","19")),],aes(label=hour),size=3)+
xlab("Hourly check-in frequency") +
ylab(expression(Pi["ST"])) +
#     ggtitle(expression(paste("Temporal Correlation (",Pi["ST"]," and Activeness)")))+
#     scale_x_log10()+
scale_y_continuous(labels=percent)+
geom_text(data=eqs,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)+theme_bw(base_size = 10)
#     theme(axis.text = element_text(size=8),legend.position="none",
#               axis.title = element_text(s
data.hour.coor[!(which(data.hour.coor$hour %in% c("01","05","19"))),]
data.hour.coor[!(data.hour.coor$hour %in% c("01","05","19")),]
ggplot(data.hour.coor,aes(x=record,y=value))+#geom_point(size=3,shape=21,fill=NA)+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
#     geom_smooth(method=loess,formula=y~x)+
geom_smooth(method=lm,formula=y~log(x),se=F,color="grey")+
geom_text(data=data.hour.coor[!(data.hour.coor$hour %in% c("01","05","19")),],aes(label=hour),size=2)+
geom_text(data=data.hour.coor[which(data.hour.coor$hour %in% c("01","05","19")),],aes(label=hour),size=3)+
xlab("Hourly check-in frequency") +
ylab(expression(Pi["ST"])) +
#     ggtitle(expression(paste("Temporal Correlation (",Pi["ST"]," and Activeness)")))+
#     scale_x_log10()+
scale_y_continuous(labels=percent)+
geom_text(data=eqs,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)+theme_bw(base_size = 10)
pdf("plots/fig6.coor.time.pdf",width=7,height=3.5,colormodel = "grey")
ggplot(data.hour.coor,aes(x=record,y=value))+#geom_point(size=3,shape=21,fill=NA)+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
#     geom_smooth(method=loess,formula=y~x)+
geom_smooth(method=lm,formula=y~log(x),se=F,color="grey")+
geom_text(data=data.hour.coor[!(data.hour.coor$hour %in% c("01","05","19")),],aes(label=hour),size=2)+
geom_text(data=data.hour.coor[which(data.hour.coor$hour %in% c("01","05","19")),],aes(label=hour),size=3)+
xlab("Hourly check-in frequency") +
ylab(expression(Pi["ST"])) +
#     ggtitle(expression(paste("Temporal Correlation (",Pi["ST"]," and Activeness)")))+
#     scale_x_log10()+
scale_y_continuous(labels=percent)+
geom_text(data=eqs,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)+theme_bw(base_size = 10)
#     theme(axis.text = element_text(size=8),legend.position="none",
#               axis.title = element_text(size=10),plot.title = element_text(size=10))
dev.off()
data.space.coor = ddply(entropies.etc.st.df,.(city),function(city){
stat = ddply(city,.(space),function(space){
data.frame("pi.max"=with(space,mean(pi.max)),
"pi.min"=with(space,mean(pi.min)),
"record"=with(space,sum(record)))
})
stat
})
data.space.coor$delta = with(data.space.coor,(pi.max-pi.min)/pi.min)
data.space.coor=melt(data.space.coor,id.vars=c(1,2,5))
data.space.coor$variable<-factor(data.space.coor$variable,
labels=c("max","min",expression(delta)))
data.space.coor$outlier<-with(data.space.coor,
ifelse(space %in% outlier.list$name,T,F))
data.space.coor$label<-with(data.space.coor,
ifelse(outlier,as.character(space),""))
data.space.coor=merge(x=data.space.coor,y=outlier.list,
by.x="label",by.y="name",all.x=T)
smooth.space<-data.frame()
eqs.space <- ddply(data.space.coor,.(city,variable),function(i){
if(i[1,"variable"]=="max"){
model = lm(i,formula=value~atan(log(record/max(record))))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else if(i[1,"variable"]=="delta"){
model = lm(i,formula=value~atan(log(record/100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else{
model = lm(i,formula=value~atan(log(record*100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
#     model =lm(i,formula=value~log(record))
# regression model statistics
eq <- substitute(atop(italic(r)^2~"="~r2*","~~italic(p)~"="~pvalue),
list(r2 = format(summary(model)$r.squared, digits = 3),
pvalue = formatC(summary(model)[[4]][[8]],format="f")))
eq <- as.character(as.expression(eq));
# regression line
eqs.pred$y = predict(model, newdata = eqs.pred);
eqs.pred$variable=i[1,"variable"]
eqs.pred$city=i[1,"city"]
smooth.space <<- rbind(smooth.space,eqs.pred)
eq
})
eqs.space$pos.x=rep(c(10,3,10),each=3)
eqs.space$pos.y=rep(c(0.7,1.2,2.7),3)
pdf("plots/fig8.coor.space.pdf",width=8,height=4,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
```
2. histogram/density
```{r}
space.stat = do.call(rbind,lapply(1:3,function(city.index){
data.total = checkin.poly.list[[city.index]][,c(city.guide$spatial.attr[city.index],"cate_l1")]
colnames(data.total)[1]="space"
stat.byspace=ddply(data.total,.(space),function(i){
df = as.data.frame(xtabs(~cate_l1,data=i))
df$prob = with(df,Freq/sum(Freq))
df
})
stat.byspace$city = city.guide$city[city.index]
stat.byspace$space = as.character(stat.byspace$space)
stat.byspace
}))
space.stat=merge(space.stat,outlier.list,by.x="space",by.y="name")
pdf("plots/fig8.coor.space.pdf",width=8,height=4,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
data.space.coor = ddply(entropies.etc.st.df,.(city),function(city){
stat = ddply(city,.(space),function(space){
data.frame("pi.max"=with(space,mean(pi.max)),
"pi.min"=with(space,mean(pi.min)),
"record"=with(space,sum(record)))
})
stat
})
data.space.coor$delta = with(data.space.coor,(pi.max-pi.min)/pi.min)
data.space.coor=melt(data.space.coor,id.vars=c(1,2,5))
data.space.coor$variable<-factor(data.space.coor$variable,
labels=c("max","min",expression(delta)))
data.space.coor$outlier<-with(data.space.coor,
ifelse(space %in% outlier.list$name,T,F))
data.space.coor$label<-with(data.space.coor,
ifelse(outlier,as.character(space),""))
data.space.coor=merge(x=data.space.coor,y=outlier.list,
by.x="label",by.y="name",all.x=T)
smooth.space<-data.frame()
eqs.space <- ddply(data.space.coor,.(city,variable),function(i){
if(i[1,"variable"]=="max"){
model = lm(i,formula=value~atan(log(record/max(record))))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else if(i[1,"variable"]=="delta"){
model = lm(i,formula=value~atan(log(record/100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else{
model = lm(i,formula=value~atan(log(record*100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
#     model =lm(i,formula=value~log(record))
# regression model statistics
eq <- substitute(atop(italic(r)^2~"="~r2*","~~italic(p)~"="~pvalue),
list(r2 = format(summary(model)$r.squared, digits = 3),
pvalue = formatC(summary(model)[[4]][[8]],format="f")))
eq <- as.character(as.expression(eq));
# regression line
eqs.pred$y = predict(model, newdata = eqs.pred);
eqs.pred$variable=i[1,"variable"]
eqs.pred$city=i[1,"city"]
smooth.space <<- rbind(smooth.space,eqs.pred)
eq
})
eqs.space$pos.x=rep(c(10,3,10),each=3)
eqs.space$pos.y=rep(c(0.7,1.2,2.7),3)
pdf("plots/fig8.coor.space.pdf",width=8,height=4,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
outlier.list = data.frame(
"name" = c("60609","60612","60629","60666",
"90045",
"10452","11368","11371","11430",""),
"type" =  c("B","B","A","A",
"A",
"B","B","A","A","C"),
"desc" = c(
"Baseball park",
"Sports arena",
"Airport",
"Airport",
"Airport",
"Baseball park",
"Baseball park",
"Airport",
"Airport",
""),
"desc.2" = c("US Celluar Field",
"United Center",
"Chicago Midway International Airport",
"O’Hare International Airport",
"Los Angeles International Airport",
"Yanke Stadium",
"Citi Field",
"LaGuardia Airport",
"John F. Kennedy International Airport",
"")
)
outlier.list$name=as.character(outlier.list$name)
outlier.list$desc = as.character(outlier.list$desc)
outlier.list$desc.2 = as.character(outlier.list$desc.2)
data.space.coor = ddply(entropies.etc.st.df,.(city),function(city){
stat = ddply(city,.(space),function(space){
data.frame("pi.max"=with(space,mean(pi.max)),
"pi.min"=with(space,mean(pi.min)),
"record"=with(space,sum(record)))
})
stat
})
data.space.coor$delta = with(data.space.coor,(pi.max-pi.min)/pi.min)
data.space.coor=melt(data.space.coor,id.vars=c(1,2,5))
data.space.coor$variable<-factor(data.space.coor$variable,
labels=c("max","min",expression(delta)))
data.space.coor$outlier<-with(data.space.coor,
ifelse(space %in% outlier.list$name,T,F))
data.space.coor$label<-with(data.space.coor,
ifelse(outlier,as.character(space),""))
data.space.coor=merge(x=data.space.coor,y=outlier.list,
by.x="label",by.y="name",all.x=T)
smooth.space<-data.frame()
eqs.space <- ddply(data.space.coor,.(city,variable),function(i){
if(i[1,"variable"]=="max"){
model = lm(i,formula=value~atan(log(record/max(record))))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else if(i[1,"variable"]=="delta"){
model = lm(i,formula=value~atan(log(record/100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
else{
model = lm(i,formula=value~atan(log(record*100)))
eqs.pred=data.frame(record = c(min(i$record):max(i$record)))
}
#     model =lm(i,formula=value~log(record))
# regression model statistics
eq <- substitute(atop(italic(r)^2~"="~r2*","~~italic(p)~"="~pvalue),
list(r2 = format(summary(model)$r.squared, digits = 3),
pvalue = formatC(summary(model)[[4]][[8]],format="f")))
eq <- as.character(as.expression(eq));
# regression line
eqs.pred$y = predict(model, newdata = eqs.pred);
eqs.pred$variable=i[1,"variable"]
eqs.pred$city=i[1,"city"]
smooth.space <<- rbind(smooth.space,eqs.pred)
eq
})
eqs.space$pos.x=rep(c(10,3,10),each=3)
eqs.space$pos.y=rep(c(0.7,1.2,2.7),3)
pdf("plots/fig8.coor.space.pdf",width=8,height=4,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
pdf("plots/fig8.coor.space.pdf",width=7,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
