scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
# function to add background to text
# extension to ggplot2 geom_text
library(proto)
btextGrob <- function (label,x = unit(0.5, "npc"), y = unit(0.5, "npc"),
just = "centre", hjust = NULL, vjust = NULL, rot = 0, check.overlap = FALSE,
default.units = "npc", name = NULL, gp = gpar(), vp = NULL, expand_w, expand_h, box_gp = gpar()) {
if (!is.unit(x))
x <- unit(x, default.units)
if (!is.unit(y))
y <- unit(y, default.units)
grob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap,
name = name, gp = gp, vp = vp, cl = "text")
tg <- textGrob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap)
w <- unit(rep(1, length(label)), "strwidth", as.list(label))
h <- unit(rep(1, length(label)), "strheight", as.list(label))
rg <- rectGrob(x=x, y=y, just = just/2+0.25, hjust = hjust/2+0.5,
vjust = vjust/2+0.5,
width=expand_w*w, height=expand_h*h,
gp=box_gp)
gTree(children=gList(rg, tg), vp=vp, gp=gp, name=name)
}
GeomTextbox <- proto(ggplot2:::GeomText, {
objname <- "textbox"
draw <- function(., data, scales, coordinates, ..., parse = FALSE, na.rm = FALSE,
expand_w = 1.2, expand_h = 2, bgcol = "grey50", bgfill = "white", bgalpha = 1) {
data <- remove_missing(data, na.rm,
c("x", "y", "label"), name = "geom_textbox")
lab <- data$label
if (parse) {
lab <- parse(text = lab)
}
with(coord_transform(coordinates, data, scales),
btextGrob(lab, x, y, default.units="native",
hjust=hjust, vjust=vjust, rot=angle,
gp = gpar(col = alpha(colour, alpha), fontsize = size * .pt,
fontfamily = family, fontface = fontface, lineheight = lineheight),
box_gp = gpar(fill = bgfill, alpha = bgalpha, col = bgcol),
expand_w = expand_w, expand_h = expand_h)
)
}
})
geom_textbox <- function (mapping = NULL, data = NULL, stat = "identity", position = "identity",
parse = FALSE,  ...) {
GeomTextbox$new(mapping = mapping, data = data, stat = stat,position = position,
parse = parse, ...)
}
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,color="white",bgfill="grey50")+
geom_point(aes(shape=type,size=type))+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
# function to add background to text
# extension to ggplot2 geom_text
library(proto)
btextGrob <- function (label,x = unit(0.5, "npc"), y = unit(0.5, "npc"),
just = "centre", hjust = NULL, vjust = NULL, rot = 0, check.overlap = FALSE,
default.units = "npc", name = NULL, gp = gpar(), vp = NULL, expand_w, expand_h, box_gp = gpar()) {
if (!is.unit(x))
x <- unit(x, default.units)
if (!is.unit(y))
y <- unit(y, default.units)
grob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap,
name = name, gp = gp, vp = vp, cl = "text")
tg <- textGrob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap)
w <- unit(rep(1, length(label)), "strwidth", as.list(label))
h <- unit(rep(1, length(label)), "strheight", as.list(label))
rg <- rectGrob(x=x, y=y, just = just, hjust = hjust,
vjust = vjust,
width=expand_w*w, height=expand_h*h,
gp=box_gp)
gTree(children=gList(rg, tg), vp=vp, gp=gp, name=name)
}
GeomTextbox <- proto(ggplot2:::GeomText, {
objname <- "textbox"
draw <- function(., data, scales, coordinates, ..., parse = FALSE, na.rm = FALSE,
expand_w = 1.2, expand_h = 2, bgcol = "grey50", bgfill = "white", bgalpha = 1) {
data <- remove_missing(data, na.rm,
c("x", "y", "label"), name = "geom_textbox")
lab <- data$label
if (parse) {
lab <- parse(text = lab)
}
with(coord_transform(coordinates, data, scales),
btextGrob(lab, x, y, default.units="native",
hjust=hjust, vjust=vjust, rot=angle,
gp = gpar(col = alpha(colour, alpha), fontsize = size * .pt,
fontfamily = family, fontface = fontface, lineheight = lineheight),
box_gp = gpar(fill = bgfill, alpha = bgalpha, col = bgcol),
expand_w = expand_w, expand_h = expand_h)
)
}
})
geom_textbox <- function (mapping = NULL, data = NULL, stat = "identity", position = "identity",
parse = FALSE,  ...) {
GeomTextbox$new(mapping = mapping, data = data, stat = stat,position = position,
parse = parse, ...)
}
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,color="white",bgfill="grey50")+
geom_point(aes(shape=type,size=type))+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,color="white",bgfill="grey50",expand_h=3)+
geom_point(aes(shape=type,size=type))+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
# function to add background to text
# extension to ggplot2 geom_text
library(proto)
btextGrob <- function (label,x = unit(0.5, "npc"), y = unit(0.5, "npc"),
just = "centre", hjust = NULL, vjust = NULL, rot = 0, check.overlap = FALSE,
default.units = "npc", name = NULL, gp = gpar(), vp = NULL, expand_w, expand_h, box_gp = gpar()) {
if (!is.unit(x))
x <- unit(x, default.units)
if (!is.unit(y))
y <- unit(y, default.units)
grob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap,
name = name, gp = gp, vp = vp, cl = "text")
tg <- textGrob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap)
w <- unit(rep(1, length(label)), "strwidth", as.list(label))
h <- unit(rep(1, length(label)), "strheight", as.list(label))
rg <- rectGrob(x=x, y=y,
width=expand_w*w, height=expand_h*h,
gp=box_gp)
gTree(children=gList(rg, tg), vp=vp, gp=gp, name=name)
}
GeomTextbox <- proto(ggplot2:::GeomText, {
objname <- "textbox"
draw <- function(., data, scales, coordinates, ..., parse = FALSE, na.rm = FALSE,
expand_w = 1.2, expand_h = 2, bgcol = "grey50", bgfill = "white", bgalpha = 1) {
data <- remove_missing(data, na.rm,
c("x", "y", "label"), name = "geom_textbox")
lab <- data$label
if (parse) {
lab <- parse(text = lab)
}
with(coord_transform(coordinates, data, scales),
btextGrob(lab, x, y, default.units="native",
hjust=hjust, vjust=vjust, rot=angle,
gp = gpar(col = alpha(colour, alpha), fontsize = size * .pt,
fontfamily = family, fontface = fontface, lineheight = lineheight),
box_gp = gpar(fill = bgfill, alpha = bgalpha, col = bgcol),
expand_w = expand_w, expand_h = expand_h)
)
}
})
geom_textbox <- function (mapping = NULL, data = NULL, stat = "identity", position = "identity",
parse = FALSE,  ...) {
GeomTextbox$new(mapping = mapping, data = data, stat = stat,position = position,
parse = parse, ...)
}
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,color="white",bgfill="grey50",expand_h=3)+
geom_point(aes(shape=type,size=type))+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,color="white",bgfill="#cccccc",expand_h=3)+
geom_point(aes(shape=type,size=type),color="white")+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,bgfill="white",expand_h=3)+
geom_point(aes(shape=type,size=type))+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,bgfill="white",expand_h=3)+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,bgfill="white",expand_h=2)+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,bgfill="#eeeeee",expand_h=2)+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
# function to add background to text
# extension to ggplot2 geom_text
library(proto)
btextGrob <- function (label,x = unit(0.5, "npc"), y = unit(0.5, "npc"),
just = "centre", hjust = NULL, vjust = NULL, rot = 0, check.overlap = FALSE,
default.units = "npc", name = NULL, gp = gpar(), vp = NULL, expand_w, expand_h, box_gp = gpar()) {
if (!is.unit(x))
x <- unit(x, default.units)
if (!is.unit(y))
y <- unit(y, default.units)
grob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap,
name = name, gp = gp, vp = vp, cl = "text")
tg <- textGrob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap)
w <- unit(rep(1, length(label)), "strwidth", as.list(label))
h <- unit(rep(1, length(label)), "strheight", as.list(label))
rg <- rectGrob(x=x, y=y, width=expand_w*w, height=expand_h*h,
gp=box_gp)
gTree(children=gList(rg, tg), vp=vp, gp=gp, name=name)
}
GeomTextbox <- proto(ggplot2:::GeomText, {
objname <- "textbox"
draw <- function(., data, scales, coordinates, ..., parse = FALSE, na.rm = FALSE,
expand_w = 1.2, expand_h = 2, bgcol = "grey50", bgfill = "white", bgalpha = 1) {
data <- remove_missing(data, na.rm,
c("x", "y", "label"), name = "geom_textbox")
lab <- data$label
if (parse) {
lab <- parse(text = lab)
}
with(coord_transform(coordinates, data, scales),
btextGrob(lab, x, y, default.units="native",
hjust=hjust, vjust=vjust, rot=angle,
gp = gpar(col = alpha(colour, alpha), fontsize = size * .pt,
fontfamily = family, fontface = fontface, lineheight = lineheight),
box_gp = gpar(fill = bgfill, alpha = bgalpha, col = bgcol),
expand_w = expand_w, expand_h = expand_h)
)
}
})
geom_textbox <- function (mapping = NULL, data = NULL, stat = "identity", position = "identity",
parse = FALSE,  ...) {
GeomTextbox$new(mapping = mapping, data = data, stat = stat,position = position,
parse = parse, ...)
}
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,bgfill="#eeeeee",expand_h=2)+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
# function to add background to text
# extension to ggplot2 geom_text
library(proto)
btextGrob <- function (label,x = unit(0.5, "npc"), y = unit(0.5, "npc"),
just = "centre", hjust = NULL, vjust = NULL, rot = 0, check.overlap = FALSE,
default.units = "npc", name = NULL, gp = gpar(), vp = NULL, expand_w, expand_h, box_gp = gpar()) {
if (!is.unit(x))
x <- unit(x, default.units)
if (!is.unit(y))
y <- unit(y, default.units)
grob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap,
name = name, gp = gp, vp = vp, cl = "text")
tg <- textGrob(label = label, x = x, y = y, just = just, hjust = hjust,
vjust = vjust, rot = rot, check.overlap = check.overlap)
w <- unit(rep(1, length(label)), "strwidth", as.list(label))
h <- unit(rep(1, length(label)), "strheight", as.list(label))
rg <- rectGrob(x=x, y=y,  just = just, hjust = hjust,
vjust = vjust, width=expand_w*w, height=expand_h*h,
gp=box_gp)
gTree(children=gList(rg, tg), vp=vp, gp=gp, name=name)
}
GeomTextbox <- proto(ggplot2:::GeomText, {
objname <- "textbox"
draw <- function(., data, scales, coordinates, ..., parse = FALSE, na.rm = FALSE,
expand_w = 1.2, expand_h = 2, bgcol = "grey50", bgfill = "white", bgalpha = 1) {
data <- remove_missing(data, na.rm,
c("x", "y", "label"), name = "geom_textbox")
lab <- data$label
if (parse) {
lab <- parse(text = lab)
}
with(coord_transform(coordinates, data, scales),
btextGrob(lab, x, y, default.units="native",
hjust=hjust, vjust=vjust, rot=angle,
gp = gpar(col = alpha(colour, alpha), fontsize = size * .pt,
fontfamily = family, fontface = fontface, lineheight = lineheight),
box_gp = gpar(fill = bgfill, alpha = bgalpha, col = bgcol),
expand_w = expand_w, expand_h = expand_h)
)
}
})
geom_textbox <- function (mapping = NULL, data = NULL, stat = "identity", position = "identity",
parse = FALSE,  ...) {
GeomTextbox$new(mapping = mapping, data = data, stat = stat,position = position,
parse = parse, ...)
}
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,bgfill="#eeeeee",expand_h=2)+
#     geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
#     geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,bgfill="#eeeeee",expand_h=2)+
geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
postscript("plots/fig8.coor.space.ps",width=8,height=4.5,bg="transparent",colormodel="gray",horizontal = F)
# pdf("plots/fig8.coor.space.pdf",width=8,height=4.5,colormodel = "grey")
theme_new<-theme_set(theme_bw(base_size = 10))
#theme_new<-theme_update(legend.position="none")
ggplot(data.space.coor,aes(x=record,y=value))+
facet_grid(variable~city,scales="free",
labeller=labeller(variable=label_bquote(Pi["ST"]^.(x))))+
geom_line(data=smooth.space,aes(x=record,y=y),color="grey")+
#     geom_smooth(method=lm,formula=y~atan(x-2),se=F)+
geom_point(aes(shape=type,size=type))+
#     geom_textbox(data=data.space.coor[which(data.space.coor$type %in% c("A","B")),],aes(label=label),size=2,bgcol = NA, vjust=1.5,bgfill="#eeeeee",expand_h=2)+
geom_text(aes(label=label),vjust=1.5,size=2.5)+
xlab("Check-in frequency by zip code") +
ylab(expression(Pi["ST"])) +
scale_x_log10()+
scale_y_continuous(labels=percent)+
scale_shape_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(17,15,16))+
scale_size_manual(name="",labels=c("Outlier A","Outlier B","Normal Region"),values=c(2,2,0.8))+
geom_text(data=eqs.space,aes(x=pos.x,y=pos.y,label=V1),inherit.aes=FALSE,
parse = TRUE,hjust=0,vjust=1,size=3)
dev.off()
