assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==33 &
checkin.active.in.grids$row.id ==18),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==32 &
checkin.active.in.grids$row.id ==22),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==28 &
checkin.active.in.grids$row.id ==20),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==25 &
checkin.active.in.grids$row.id ==21),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==24 &
checkin.active.in.grids$row.id ==20),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==19 &
checkin.active.in.grids$row.id ==19),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==19 &
checkin.active.in.grids$row.id ==23),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==18 &
checkin.active.in.grids$row.id ==23),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==21 &
checkin.active.in.grids$row.id ==21),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
checkin.active.sub1 =
checkin.active.in.grids[which(checkin.active.in.grids$col.id==22 &
checkin.active.in.grids$row.id ==22),]
data = checkin.active.sub1
print(c(nrow(data),data[1,c("col.id","row.id")]))
data$ugrid.id = factor(data$grid.id)
uc.mat = matrix(data=rep(NA,25),ncol=5)
colnames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
rownames(uc.mat)=c("Category","Hour","Weekday","Grid","Former")
assoc = associations(xtabs(~cate_l1 + hour,data = data))
uc.mat["Category","Hour"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (hour)
uc.mat["Hour","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (hour) because of Column (cate_l1)
assoc = associations(xtabs(~cate_l1 + weekday,data = data))
uc.mat["Category","Weekday"] = assoc$uc.RC * 100  #uncertainty reduction in Row (cate_l1) because of Column (weekday)
uc.mat["Weekday","Category"] = assoc$uc.CR * 100  #uncertainty reduction in Row (weekday) because of Column (cate_l1)
assoc = associations(xtabs(~hour + weekday,data = data))
uc.mat["Hour","Weekday"] = assoc$uc.RC * 100
uc.mat["Weekday","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~cate_l1 + ugrid.id,data = data))
uc.mat["Category","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(~hour + ugrid.id,data = data))
uc.mat["Hour","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(~weekday + ugrid.id,data = data))
uc.mat["Weekday","Grid"] = assoc$uc.RC * 100
uc.mat["Grid","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~cate_l1 + last.cate_l1,data = data))
uc.mat["Category","Former"] = assoc$uc.RC * 100
uc.mat["Former","Category"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~hour + last.cate_l1,data = data))
uc.mat["Hour","Former"] = assoc$uc.RC * 100
uc.mat["Former","Hour"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~weekday + last.cate_l1,data = data))
uc.mat["Weekday","Former"] = assoc$uc.RC * 100
uc.mat["Former","Weekday"] = assoc$uc.CR * 100
assoc = associations(xtabs(tweight~ugrid.id  + last.cate_l1,data = data))
uc.mat["Grid","Former"] = assoc$uc.RC * 100
uc.mat["Former","Grid"] = assoc$uc.CR * 100
uc.mat
library(rgdal)
library(scales)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(manipulate)
library(plyr)
library(vcd) # for chi-square and cramer's V
source("D:\\GitRepos\\work\\fun\\multiplot.R")
ppi=300
basedir = "D:\\Experiments\\R\\"
nycb = readOGR(dsn="D:\\Experiments\\foursquare checkin data\\shapefile\\boundaries",
layer="NYC_borough_boundaries_WGS84")
nycb@data$id = rownames(nycb@data)
nycb.points = fortify(nycb, region="id")
nycb.df = join(nycb.points, nycb@data, by="id")
library(rgdal)
nycb = readOGR(dsn="D:\\Experiments\\foursquare checkin data\\shapefile\\boundaries",
layer="NYC_borough_boundaries_WGS84")
nycb@data$id = rownames(nycb@data)
nycb.points = fortify(nycb, region="id")
nycb.df = join(nycb.points, nycb@data, by="id")
nycb = readOGR(dsn="D:\\Experiments\\foursquare checkin data\\shapefile\\boundaries\\NY_NY",
layer="NYC_borough_boundaries_WGS84")
nycb@data$id = rownames(nycb@data)
nycb.points = fortify(nycb, region="id")
nycb.df = join(nycb.points, nycb@data, by="id")
nycb = readOGR(dsn="D:\\Experiments\\foursquare checkin data\\shapefile\\boundaries\\NY_NY\\",
layer="NYC_borough_boundaries_WGS84")
nycb@data$id = rownames(nycb@data)
nycb.points = fortify(nycb, region="id")
nycb.df = join(nycb.points, nycb@data, by="id")
nycb = readOGR(dsn="D:\\Experiments\\foursquare checkin data\\shapefile\\boundaries\\NY-NY",
layer="NYC_borough_boundaries_WGS84")
nycb@data$id = rownames(nycb@data)
nycb.points = fortify(nycb, region="id")
nycb.df = join(nycb.points, nycb@data, by="id")
ggplot() +
#     geom_path(data=compose.grids.line(corners, cols, rows),
#               aes(x=x, y=y,group=group),alpha=.5,size=.3,color="#DDDDDD")+
geom_polygon(data=nycb.df,aes(long,lat,group=group),alpha=.1,color="grey") +
#     geom_path(aes(x=lon.x, y=lat.x),color="#55B1F7",alpha=.8,size=.2)+
#     geom_point(data=checkin.active[,c("lon.x","lat.x")],
#                aes(x=lon.x, y=lat.x),
#                color = "#55B1F7", alpha = 0.3, size=.5)+
theme(legend.position="none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank(),
plot.margin=unit(c(.05,.05,.05,.05),"npc"))
ggplot() +
#     geom_path(data=compose.grids.line(corners, cols, rows),
#               aes(x=x, y=y,group=group),alpha=.5,size=.3,color="#DDDDDD")+
geom_polygon(data=nycb.df,aes(long,lat,group=group,color=group),alpha=.1) +
#     geom_path(aes(x=lon.x, y=lat.x),color="#55B1F7",alpha=.8,size=.2)+
#     geom_point(data=checkin.active[,c("lon.x","lat.x")],
#                aes(x=lon.x, y=lat.x),
#                color = "#55B1F7", alpha = 0.3, size=.5)+
theme(legend.position="none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank(),
plot.margin=unit(c(.05,.05,.05,.05),"npc"))
View(nycb.df)
View(nycb.df)
summary(nycb.df)
sink()
summary(nycb.df)
summary(nycb.df$id)
unique(nycb.df$id)
x=c("id"=c(1:10),value=paste0(x,c(1:10)))
x=c("id"=c(1:10),value=paste0("x",c(1:10)))
x=c("id"=c(1:10),value=paste0("x",c(1:10)),"pid"=rep(c(1:5),2))
x
x=data.frame("id"=c(1:10),value=paste0("x",c(1:10)),"pid"=rep(c(1:5),2))
View(x)
y=data.frame("pid"=c(1:5))
y=data.frame("pid"=c(1:5),value=paste0("y",c(1:5)))
View(y)
?merge
y=data.frame("pid"=c(1:5),value=paste0("y",c(1:5)),all.x=a;;)
y=data.frame("pid"=c(1:5),value=paste0("y",c(1:5)),all.x=a)
y=data.frame("pid"=c(1:5),value=paste0("y",c(1:5)),all.x=all)
y=data.frame("pid"=c(1:5),value=paste0("y",c(1:5)))
View(y)
merge(x=x, y=y, by.x="pid",by.y="pid",all.x=all)
merge(x=x, y=y, by.x="pid",by.y="pid",all.x=TRUE)
z=merge(x=x, y=y, by.x="pid",by.y="pid",all.x=TRUE)
View(z)
View(nycb.df)
