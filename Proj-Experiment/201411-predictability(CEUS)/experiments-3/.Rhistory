checkin.regularized[1:20,]
checkin.regularized$last.weighted = 1/checkin.regularized$Freq
checkin.regularized[1:20,]
checkin.regularized[1000:1020,]
checkin.regularized[10000:10020,]
checkin.regularized[100000:100020,]
tabs.last1 = xtabs(data=checkin.regularized,I(tweight*last.weighted)~cate_l1+last.cate_l1)
tabs.last2 = xtabs(data=checkin.regularized,I(tweight*last.weighted)~cate_l1+last.cate_l1)
tabs.last.p2 = apply(tabs.last1,2,function(x){x/sum(x)})
p1<-ggplot(melt(tabs.last.p1), aes(Var1,last.cate_l1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
p2<-ggplot(melt(tabs.last.p2), aes(Var1,last.cate_l1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(a)")+ylab("") +
ggtitle("Unscaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
png(paste0(basedir,"img\\Agile\\agile_map8.last.cls1_v2.png"), width = 8*ppi, height = 2.8*ppi, res=ppi,bg = "transparent")
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
dev.off()
p1<-ggplot(melt(tabs.last.p1), aes(Var1,last.cate_l1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
xlab("(a)")+ylab("") +
ggtitle("Unscaled")+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
p2<-ggplot(melt(tabs.last.p2), aes(Var1,last.cate_l1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
png(paste0(basedir,"img\\Agile\\agile_map8.last.cls1_v2.png"), width = 8*ppi, height = 2.8*ppi, res=ppi,bg = "transparent")
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
dev.off()
#                                          "Arts & Entertainment", "Nightlife Spot","Event","College & University")
tabs.last1 = xtabs(data=checkin.active2,tweight~cate_l1+last.cate_l1)
tabs.last.p1 = apply(tabs.last1,2,function(x){x/sum(x)}) # no scale
sum.freq = as.data.frame(table(checkin.active2$cate_l1))
as.data.frame(tabs.last.p1)
tabs.last1 = xtabs(data=checkin.active2,tweight~cate_l1+last.cate_l1)
tabs.last.p1 = apply(tabs.last1,2,function(x){x/sum(x)}) # no scale
tabs.last.p1
checkin.active2$last_cate_ref = as.factor(as.numeric(checkin.active2$last.cate_l1) )
checkin.active2$last.cate_ref = as.factor(as.numeric(checkin.active2$last.cate_l1) )
tabs.last1 = xtabs(data=checkin.active2,tweight~cate_l1+last.cate_ref)
tabs.last.p1 = apply(tabs.last1,2,function(x){x/sum(x)}) # no scale
as.data.frame(tabs.last.p1)
View(sum.freq)
View(sum.freq)
tabs.last.p2 = apply(tabs.last1,1,function(x){x/sum.freq})
tabs.last.p2 = apply(tabs.last1,1,function(x){x/sum.freq$Freq})
p1<-ggplot(melt(tabs.last.p1), aes(Var1,last.cate_l1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
xlab("(a)")+ylab("") +
ggtitle("Unscaled")+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
p2<-ggplot(melt(tabs.last.p2), aes(Var1,last.cate_l1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
p1<-ggplot(melt(tabs.last.p1), aes(Var1,last.cate_l1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
xlab("(a)")+ylab("") +
ggtitle("Unscaled")+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
p2<-ggplot(melt(tabs.last.p2), aes(Var1,Var2)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
ggplot(melt(tabs.last.p1), aes(Var1,last.cate_l1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
xlab("(a)")+ylab("") +
ggtitle("Unscaled")+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
ggplot(melt(tabs.last.p1), aes(Var1,last.cate_ref)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
xlab("(a)")+ylab("") +
ggtitle("Unscaled")+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
ggplot(melt(tabs.last.p2), aes(Var1,Var2)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
tabs.last.p2
melt(tabs.last.p2)]
melt(tabs.last.p2)]
melt(tabs.last.p2)
p2<-ggplot(melt(tabs.last.p2), aes(cate_l1,Var1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
p1<-ggplot(melt(tabs.last.p1), aes(Var1,last.cate_ref)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
xlab("(a)")+ylab("") +
ggtitle("Unscaled")+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
p2<-ggplot(melt(tabs.last.p2), aes(cate_l1,Var1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
p2<-ggplot(melt(tabs.last.p2), aes(cate_l1,Var1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-2,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
png(paste0(basedir,"img\\Agile\\agile_map8.last.cls1_v2.png"), width = 8*ppi, height = 2.8*ppi, res=ppi,bg = "transparent")
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
dev.off()
tabs.last.p2 = apply(tabs.last1,2,function(x){x/sum.freq$Fre})
melt(tabs.last.p2)
p2<-ggplot(melt(tabs.last.p2), aes(Var1,last_cate_ref)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-2,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
png(paste0(basedir,"img\\Agile\\agile_map8.last.cls1_v2.png"), width = 8*ppi, height = 2.8*ppi, res=ppi,bg = "transparent")
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
dev.off()
p2<-ggplot(melt(tabs.last.p2), aes(Var1,last.cate_ref)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-2,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
png(paste0(basedir,"img\\Agile\\agile_map8.last.cls1_v2.png"), width = 8*ppi, height = 2.8*ppi, res=ppi,bg = "transparent")
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
dev.off()
p2<-ggplot(melt(tabs.last.p2), aes(Var1,last.cate_ref)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1.2,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
png(paste0(basedir,"img\\Agile\\agile_map8.last.cls1_v2.png"), width = 8*ppi, height = 2.8*ppi, res=ppi,bg = "transparent")
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
dev.off()
p2<-ggplot(melt(tabs.last.p2), aes(Var1,last.cate_ref)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1.5,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
png(paste0(basedir,"img\\Agile\\agile_map8.last.cls1_v2.png"), width = 8*ppi, height = 2.8*ppi, res=ppi,bg = "transparent")
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
dev.off()
tabs.last1 = xtabs(data=checkin.active2,tweight~cate_l1+last.cate_l1)
tabs.last.p1 = apply(tabs.last,2,function(x){x/sum(x)}) # no scale
# remove the inherit power. i.e. scale the row(the next category) sum to be 1
tabs.last.p2 = apply(tabs.last,1,function(x){x/sum(x)})
tabs.last.p2 = apply(tabs.last.p2,1,function(x){x/sum(x)})
red=rgb(1,0.2,0.2); white=rgb(1,1,1); green = rgb(0,1,0);
RtoWrange<-colorRampPalette(c(red, white ) )
WtoGrange<-colorRampPalette(c( white,green) )
p1<-ggplot(melt(tabs.last.p1), aes(Var1,last.cate_l1)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
xlab("(a)")+ylab("") +
ggtitle("Unscaled")+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
p2<-ggplot(melt(tabs.last.p2), aes(Var1,Var2)) +
geom_tile(aes(fill = log10(value)),
colour = "white") +
xlab("(b)")+ylab("") +
ggtitle("Scaled")+
scale_fill_gradient2(low=RtoWrange(20),mid=WtoGrange(20),high=green,midpoint=-1,
breaks=c(-5,-4,-3,-2,-1),name="Probability",
labels=c(expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1)))+
#     scale_fill_manual(values=c("#FF0000","#FF4000","#FF6000","#FF8000","#FF9F00",
#                                "#FFBF00","#FFDF00","#FFFF00","#FFFF2A","#FFFFD5")) +
theme(axis.title = element_text(size=10),
plot.title = element_text(size=10),#legend.position="none",
legend.title = element_text( size=6),legend.text = element_text(size = 6),
axis.text.y=element_text(size=5,color="black"),
axis.text.x  = element_text(angle=30, vjust=1, hjust = 1,size=5,color="black"),
#           axis.text=element_blank(),
panel.background = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin=unit(c(0,0,0,0),"npc"))
png(paste0(basedir,"img\\Agile\\agile_map8.last.cls1_v2.png"), width = 8*ppi, height = 2.8*ppi, res=ppi,bg = "transparent")
grid.arrange(p2,p1,ncol=2, nrow=1, widths=c(1,1))
dev.off()
png(paste0(basedir,"img\\Agile\\agile_map8.last.cls1_v2.png"), width = 8*ppi, height = 2.8*ppi, res=ppi,bg = "transparent")
grid.arrange(p1,p2,ncol=2, nrow=1, widths=c(1,1))
dev.off()
